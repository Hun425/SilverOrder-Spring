DROP DATABASE IF EXISTS silverorder;
CREATE DATABASE silverorder;
USE silverorder;

CREATE TABLE T_USER (
	USER_ID	BIGINT	NOT NULL,
	USER_EMAIL	VARCHAR	NOT NULL,
	USER_PW	VARCHAR	NOT NULL,
	USER_STATUS	TINYINT	NOT NULL,
	USER_BIRTH	DATE	NOT NULL,
	USER_JOIN_DATE	DATETIME	NOT NULL,
	USER_UPDATE_DATE	DATETIME	NOT NULL
);

CREATE TABLE T_STORE (
	STORE_ID	BIGINT	NOT NULL,
	USER_ID	BIGINT	NOT NULL,
	STORE_NAME	VARCHAR	NOT NULL,
	STORE_DESC	VARCHAR	NULL,
	STORE_CATEGORY	VARCHAR	NOT NULL,
	STORE_RATE	FLOAT	NOT NULL,
	STORE_STATUS	INT	NOT NULL,
	ADDRESS	VARCHAR	NOT NULL,
	LATITUDE	FLOAT	NULL,
	LONGITUDE	FLOAT	NULL,
	ACCOUNT_NUM	VARCHAR	NULL,
	OPEN_TIME	VARCHAR	NOT NULL,
	CLOSE_TIME	VARCHAR	NOT NULL
);

CREATE TABLE T_CARD (
	PAYMENT_ID	BIGINT	NOT NULL,
	CARD_NUM	VARCHAR	NOT NULL,
	CARD_CVC	VARCHAR	NOT NULL,
	DISCOUNT_CATEGORY	VARCHAR	NULL,
	DISCOUNT_RATE	FLOAT	NULL
);

CREATE TABLE T_MENU (
	MENU_ID	BIGINT	NOT NULL,
	MENU_CATEGORY_ID	BIGINT	NOT NULL,
	MENU_NAME	VARCHAR	NOT NULL,
	SIMPLE_NAME	VARCHAR	NOT NULL,
	MENU_DESC	VARCHAR	NULL,
	MENU_STATUS	INT	NOT NULL,
	MENU_PRICE	INT	NOT NULL	DEFAULT 0,
	RECOMMEND	BIT	NOT NULL	DEFAULT 0,
	THUMB	VARCHAR	NULL
);

CREATE TABLE T_REVIEW (
	REVIEW_ID	BIGINT	NOT NULL,
	ORDER_ID	BIGINT	NOT NULL,
	USER_ID	BIGINT	NOT NULL,
	CONTENT	VARCHAR	NULL,
	RATING	TINYINT	NOT NULL
);

CREATE TABLE T_ORDER (
	ORDER_ID	BIGINT	NOT NULL,
	STORE_ID	BIGINT	NOT NULL,
	PAYMENT_ID	BIGINT	NOT NULL,
	TRADE_NUM	BIGINT	NOT NULL,
	ORDER_DATE	DATE	NOT NULL,
	PAY_PRICE	BIGINT	NOT NULL,
	ORDER_STATUS	INT	NOT NULL,
	REQUIRE	VARCHAR	NOT NULL,
	ORDER_TIME	DATETIME	NOT NULL	DEFAULT GETDATE()
);

CREATE TABLE T_OPTION (
	OPTION_ID	BIGINT	NOT NULL,
	OPTION_PRESET_ID	BIGINT	NOT NULL,
	OPTION_INDEX	BIGINT	NOT NULL,
	OPTION_NAME	VARCHAR	NOT NULL,
	OPTION_PRICE	BIGINT	NOT NULL	DEFAULT 0
);

CREATE TABLE T_CART (
	CART_ID	BIGINT	NOT NULL,
	USER_ID	BIGINT	NOT NULL,
	STORE_ID	BIGINT	NOT NULL,
	MENU_ID	BIGINT	NOT NULL,
	MENU_AMOUNT	BIGINT	NOT NULL,
	CART_PRICE	BIGINT	NOT NULL
);

CREATE TABLE T_CART_OPTION (
	CART_DETAIL_ID	BIGINT	NOT NULL,
	CART_ID	BIGINT	NOT NULL,
	OPTION_ID	BIGINT	NOT NULL
);

CREATE TABLE T_PROC_SALES (
	PROC_ID	BIGINT	NOT NULL,
	STORE_ID	BIGINT	NOT NULL,
	PROC_DATE	DATE	NOT NULL,
	PROC_DAILY_SALES	BIGINT	NOT NULL,
	INSERT_DATE	DATE	NOT NULL
);

CREATE TABLE T_ORDER_MENU (
	ORDER_ID	BIGINT	NOT NULL,
	MENU_ID	BIGINT	NOT NULL,
	MENU_AMOUNT	INT	NULL,
	MENU_PRICE	BIGINT	NULL
);

CREATE TABLE T_ORDER_OPTION (
	ORDER_OPTION_ID	BIGINT	NOT NULL,
	ORDER_ID	BIGINT	NOT NULL,
	OPTION_ID	BIGINT	NOT NULL
);

CREATE TABLE T_OPTION_CATEGORY (
	OPTION_PRESET_ID	BIGINT	NOT NULL,
	STORE_ID	BIGINT	NOT NULL,
	OPTION_CATEGORY_TITLE	VARCHAR	NOT NULL,
	OPTION_TYPE	INT	NOT NULL
);

CREATE TABLE T_OWNER_REVIEW (
	REVIEW_ID	BIGINT	NOT NULL,
	ORDER_ID	BIGINT	NOT NULL,
	CONTENT	VARCHAR	NULL,
	CREATED_DATE	DATETIME	NOT NULL,
	MODIFIED_DATE	DATETIME	NOT NULL
);

CREATE TABLE T_ACCOUNT (
	PATMENT_ID	BIGINT	NOT NULL,
	ACCOUNT_NUM	BIGINT	NOT NULL,
	ACCOUNT_PASS	VARCHAR	NOT NULL
);

CREATE TABLE T_PAYMENT (
	PAYMENT_ID	BIGINT	NOT NULL,
	USER_ID	BIGINT	NOT NULL,
	PAYMENT_TYPE	INT	NOT NULL
);

CREATE TABLE T_PROC_SALES_DETAIL (
	PROC_DETAIL_ID	BIGINT	NOT NULL,
	PROC_ID	BIGINT	NOT NULL,
	MENU_ID	BIGINT	NOT NULL,
	MENU_AMOUNT	BIGINT	NOT NULL	DEFAULT 0,
	MENU_SALES	BIGINT	NOT NULL,
	PERCHASE_AGE	INT	NOT NULL,
	INSERT_DATE	DATE	NOT NULL
);

CREATE TABLE T_CODE_GROUP (
	GROUP_ID	INT	NOT NULL,
	GROUP_NAME	VARCHAR	NOT NULL,
	INSERT_DATE	DATETIME	NOT NULL	DEFAULT GETDATE()
);

CREATE TABLE T_MENU_OPTION_CATEGORY (
	OPTION_PRESET_ID	BIGINT	NOT NULL,
	MENU_ID	BIGINT	NOT NULL
);

CREATE TABLE T_COMMON_CODE (
	CODE_ID	INT	NOT NULL,
	GROUP_ID	INT	NOT NULL,
	CODE_VALUE	VARCHAR	NOT NULL,
	INSERT_DATE	DATETIME	NOT NULL	DEFAULT GETDATE()
);

CREATE TABLE T_STORE_MENU_CATEGORY (
	MENU_CATEGORY_ID	BIGINT	NOT NULL,
	STORE_ID	BIGINT	NOT NULL,
	MENU_CATEGORY_NAME	VARCHAR	NOT NULL
);

ALTER TABLE T_USER ADD CONSTRAINT PK_T_USER PRIMARY KEY (
	USER_ID
);

ALTER TABLE T_STORE ADD CONSTRAINT PK_T_STORE PRIMARY KEY (
	STORE_ID
);

ALTER TABLE T_CARD ADD CONSTRAINT PK_T_CARD PRIMARY KEY (
	PAYMENT_ID
);

ALTER TABLE T_MENU ADD CONSTRAINT PK_T_MENU PRIMARY KEY (
	MENU_ID
);

ALTER TABLE T_REVIEW ADD CONSTRAINT PK_T_REVIEW PRIMARY KEY (
	REVIEW_ID,
	ORDER_ID
);

ALTER TABLE T_ORDER ADD CONSTRAINT PK_T_ORDER PRIMARY KEY (
	ORDER_ID
);

ALTER TABLE T_OPTION ADD CONSTRAINT PK_T_OPTION PRIMARY KEY (
	OPTION_ID
);

ALTER TABLE T_CART ADD CONSTRAINT PK_T_CART PRIMARY KEY (
	CART_ID
);

ALTER TABLE T_CART_OPTION ADD CONSTRAINT PK_T_CART_OPTION PRIMARY KEY (
	CART_DETAIL_ID
);

ALTER TABLE T_PROC_SALES ADD CONSTRAINT PK_T_PROC_SALES PRIMARY KEY (
	PROC_ID
);

ALTER TABLE T_ORDER_MENU ADD CONSTRAINT PK_T_ORDER_MENU PRIMARY KEY (
	ORDER_ID
);

ALTER TABLE T_ORDER_OPTION ADD CONSTRAINT PK_T_ORDER_OPTION PRIMARY KEY (
	ORDER_OPTION_ID
);

ALTER TABLE T_OPTION_CATEGORY ADD CONSTRAINT PK_T_OPTION_CATEGORY PRIMARY KEY (
	OPTION_PRESET_ID
);

ALTER TABLE T_OWNER_REVIEW ADD CONSTRAINT PK_T_OWNER_REVIEW PRIMARY KEY (
	REVIEW_ID,
	ORDER_ID
);

ALTER TABLE T_ACCOUNT ADD CONSTRAINT PK_T_ACCOUNT PRIMARY KEY (
	PATMENT_ID
);

ALTER TABLE T_PAYMENT ADD CONSTRAINT PK_T_PAYMENT PRIMARY KEY (
	PAYMENT_ID
);

ALTER TABLE T_PROC_SALES_DETAIL ADD CONSTRAINT PK_T_PROC_SALES_DETAIL PRIMARY KEY (
	PROC_DETAIL_ID
);

ALTER TABLE T_CODE_GROUP ADD CONSTRAINT PK_T_CODE_GROUP PRIMARY KEY (
	GROUP_ID
);

ALTER TABLE T_COMMON_CODE ADD CONSTRAINT PK_T_COMMON_CODE PRIMARY KEY (
	CODE_ID
);

ALTER TABLE T_STORE_MENU_CATEGORY ADD CONSTRAINT PK_T_STORE_MENU_CATEGORY PRIMARY KEY (
	MENU_CATEGORY_ID
);

ALTER TABLE T_CARD ADD CONSTRAINT FK_T_PAYMENT_TO_T_CARD_1 FOREIGN KEY (
	PAYMENT_ID
)
REFERENCES T_PAYMENT (
	PAYMENT_ID
);

ALTER TABLE T_REVIEW ADD CONSTRAINT FK_T_ORDER_TO_T_REVIEW_1 FOREIGN KEY (
	ORDER_ID
)
REFERENCES T_ORDER (
	ORDER_ID
);

ALTER TABLE T_ORDER_MENU ADD CONSTRAINT FK_T_ORDER_TO_T_ORDER_MENU_1 FOREIGN KEY (
	ORDER_ID
)
REFERENCES T_ORDER (
	ORDER_ID
);

ALTER TABLE T_OWNER_REVIEW ADD CONSTRAINT FK_T_REVIEW_TO_T_OWNER_REVIEW FOREIGN KEY (
	REVIEW_ID,
	ORDER_ID
)
REFERENCES T_REVIEW (
	REVIEW_ID,
	ORDER_ID
);

ALTER TABLE T_ACCOUNT ADD CONSTRAINT FK_T_PAYMENT_TO_T_ACCOUNT_1 FOREIGN KEY (
	PATMENT_ID
)
REFERENCES T_PAYMENT (
	PAYMENT_ID
);

/*
ALTER TABLE T_OWNER_REVIEW ADD CONSTRAINT FK_T_REVIEW_TO_T_OWNER_REVIEW_2 FOREIGN KEY (
	ORDER_ID
)
REFERENCES T_REVIEW (
	ORDER_ID
);
*/

